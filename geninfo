#! /bin/bash

variable1_=$1_
critical_argument01=$variable1_

if [ -z $1]
then
	exit $E_MISSING_POS_PARAM
fi
#args=$#
#lastarg=${!args}
# call this script with at least 10 parameters, for example 
#MINPARAMS=10
#
#echo 
#echo "The name of this script is \"`basename $0`\"."
#
#echo 
#	
#if [ -n "$i"]
#then
#	echo "Parameter #1 is $1"
#fi
#
#if [ -n "$2" ]
#then
#	echo "The name of the second param is $2"
#fi
#
#if [ -n "${10}"]
#then
#	echo "Parameter #10 is ${10}"
#fi
#
#echo "----------------------"
#echo "All the commnd-line parameters are: "$*""
#
#if [ $# -lt "$MINPARAMS"]
#then
#    echo 
#	echo "This script needs at least $MINPARAMS command-line arguments!"
#fi

#let "f /= $undecl_var" #divide by 0?
#let "f /= 0"
#echo "f = $f"
#let "f += 1"
#echo "f = $f"
#echo 


#a=2334 #integer
#let "a += 1"
#echo "a = $a"
#echo 
#b=(a/23/BB)
#echo "b  = $b"
#declare -i b
#echo "b = $b"
#let "b += 1"
#echo "b = $b"
#echo 
#c=BB34
#echo "c = $c"
#
#d=${c/BB/23}
#echo "d = $d"
#echo 

#e=''
#echo "e = $e"
#let "e += 1"
#echo "e = $e"
#echo 
#
#e=''
#echo "e = $e"
#let "e += 1"
#echo "e = $e"

#a=`ls -l`
#echo $a
#echo 
#echo "$a"
#exit 0

#echo 
#a=879
#
#echo "The value of \"a\" is $a."
#
#let a=16+5
#echo "The value of \"a\" is now $a."
#echo 
#echo -n "Values of \"a\" in the loop are:"
#for a in 7 8 9 11
#do 
#	echo -n "$a"
#done
#
#echo 
#echo 
#
#read a
#echo -n "Enter \"a\" "



#echo $uninitialized_variable
#let "uninitialized_variable += 5"
#echo $uninitialized_variable
#if [ -z "$unassigned"]
#then
#	echo "$unassigned is null"
#fi
#echo "hi"
#echo
#echo
#echo
#echo
#echo "hi"
#hello= 
#echo "\$hello (null value) = $hello"
#a=357
#hello=$a
#echo "${hello}"
#
#echo 
#
#hello="A B C   D"
#echo $hello
#echo "$hello"
#echo -e '\x0a'
#echo "<Ctrl-v><Ctrl-j>"

#read -n 1 -s -p \ $'Control M leaves the cursor at the beginning of the line. Press enter \x0d'
#	echo >&2
#read -n 1 -s -p \ $'Control J leaves the cursor on the next line \x0a'

#a=""
#echo "abcdefghij"
#echo 
#echo -n "abcdefghi$a "
#echo -n "abcdefghi$a"
#echo; echo 
#var="-n"
#echo $var
#if [ ~/.vimrc -ot ~/.zshrc ]
#then
#	echo "vimrc is older than zshrc"
#fi
#
#if [ ~/.vimrc -eq ~/.zshrc ]
#then
#	echo "vimrc is just as old as zshrc"
#fi
#
#if [ ~/.vimrc -eq ~/.zshrc -a ~/.zshrc -eq 40 ]
#then
#	echo "vimrc is equeal and zshrc = 40"
#fi

#for i in 1 2 3 4 5 6 7 8 9 
#do
#	echo -n "$i "
#done &
#
#echo "This will sometimes not display"
#
#for i in 11 12 13 14 15 16 17 18 19
#do
#	echo -n "$i "
#done
#echo 
#
#exit 0
#variable=initial_value
#echo "new_value" | read variable
#echo "variable = $variable"
#tr 'a-z' 'A-Z'
#exit 0

#veg1=carrots
#veg2=tomatoes
#
#if [[ "$veg1" < "$veg2" ]]
#then
#	echo "Although $veg1 preceeds $veg2 in the dictionary"
#	echo -n "This does not necessarily indicate anything"
#	echo " about my cullinary preferences"
#else
#   echo "What kind of dictionary are you using anyway?"
#fi


#a=3
#b=7
#
#echo $[$a+$b]
#echo $[$a*$b]
#
#SUCCESS=0
#E_NOARGS=65
#
#if [ -z "$1"]
#then
#	echo $0
#	exit $E_NOARGS
#fi
#
#{ #begin code block
#	echo 
#	echo "Archive description"
#
#}
#File=~/.vimrc
#
#{
#read line5
#read line12
#} < $File
#
#echo "the first line in $File of my vimrc is $line5"
#echo "the nineth line of in $File  my vimrc is $line12"
#
#exit 0 #exit with success
#
#
#date;
#who;
#uptime;
#
#var1=10;
#(( var0 = var1 < 2 ? 1 : 3 ))
#
#if [ $var0 -lt 0 ]
#then
#	echo "yes";
#else
#	echo "no";
#fi
#var1=5
#var2=23skidoo
#
#echo $var1
#echo $var2
#(a=hello; echo $a)
#testarray=(on off);
#echo $testarray;
#echo \"{these,variables,will,be,quoted}\"
#cat {~/.vimrc,~/.zshrc,~/.muttrc} > ~/mynewfile
#cp ~/dummy_file{.txt,.back} 
#echo {a..z}
#echo {0..1000}
